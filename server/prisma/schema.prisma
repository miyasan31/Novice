datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id    Int     @id @default(autoincrement())
  label String
  done  Boolean @default(false)
}

model User {
  id         String    @id
  name       String    @db.Text
  profile    String    @db.Text @default("")
  icon       String    @db.Text @default("")
  email      String    @db.Text @unique
  createdAt  DateTime  @default(now())
  tweets     Tweet[]
  likes      Like[]
  replies    Reply[]
  retweets   Retweet[]
  followings Follow[]  @relation("Following")
  followers  Follow[]  @relation("Follower")
}

model Tweet {
  id        Int       @id @default(autoincrement())
  userId    String
  tweet     String    @db.Text
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes     Like[]
  retweets  Retweet[]
  replies   Reply[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  reply     String   @db.Text
  userId    String
  tweetId   Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    String
  tweetId   Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)

  @@unique([userId, tweetId])
}

model Retweet {
  id        Int      @id @default(autoincrement())
  userId    String
  tweetId   Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)

  @@unique([userId, tweetId])
}

model Follow {
  id          Int      @id @default(autoincrement())
  userId      String
  followingId String
  createdAt   DateTime @default(now())
  follower    User     @relation("Follower", fields: [userId], references: [id], onDelete: Cascade)
  following   User     @relation("Following", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([userId, followingId])
}
